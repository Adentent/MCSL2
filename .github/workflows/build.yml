name: Build and Release

on: [push, workflow_dispatch]

permissions: write-all

jobs:
  Windows:
    strategy:
      fail-fast: false

      matrix:
        os:
          - windows-latest
        architecture:
          - x64
          - x86
          - arm64
        mcsl2version: 
          - 2.2.0.0

    runs-on: ${{ matrix.os }}

    steps:

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt

      - name: Build on Windows
        run: >
          python -m nuitka
          --standalone
          --mingw64
          --enable-plugin=pyqt5
          --output-dir=build
          --assume-yes-for-downloads
          --windows-icon-from-ico=MCSL2.ico
          --windows-company-name="MCSLTeam"
          --disable-console
          --windows-product-name="MCSL 2"
          --windows-file-version=${{ matrix.mcsl2version }}
          --windows-product-version=${{ matrix.mcsl2version }}
          --windows-file-description="MC Server Launcher 2"
          --include-data-dir=resource/dark=resource/dark
          --include-data-dir=resource/light=resource/light
          --include-data-dir=MCSL2/Aria2=MCSL2/Aria2
          --follow-import-to=Adapters
          --follow-import-to=MCSL2Lib
          --lto=no
          MCSL2.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/**/*

  # macOS:
  #   strategy:
  #     fail-fast: false

  #     matrix:
  #       os:
  #         - macos-latest
  #       architecture:
  #         - x64
  #         - arm64
  #       mcsl2version: 
  #         - 2.2.0.0

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - name: Check-out repository
  #       uses: actions/checkout@v3

  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.8'
  #         cache: 'pip'
  #         cache-dependency-path: |
  #           requirements.txt

  #     - name: Update Pip and Install Requirements
  #       run: |
  #         python -m pip install pip setuptools -U
  #         python -m pip install -r requirements.txt
          
  #     - name: Install create-dmg
  #       run: | 
  #         brew install create-dmg

  #     - name: Prepare for Nuitka
  #       run: |
  #         rm PyQt5/Qt5/.gitkeep
  #         mv MCSL2.py MCSL2App.py && sed -i '' 's/MCSL2/MCSL2App/g' MCSL2App.py

  #     - name: Build on macOS
  #       run: >
  #         python -m nuitka
  #         --enable-plugin=pyqt5
  #         --assume-yes-for-downloads
  #         --macos-app-icon=MCSL2.icns
  #         --disable-console
  #         --include-data-dir=resource/dark=resource/dark
  #         --include-data-dir=resource/light=resource/light
  #         --include-data-dir=MCSL2/Aria2=MCSL2/Aria2
  #         --follow-import-to=Adapters
  #         --follow-import-to=MCSL2Lib
  #         --lto=no
  #         --standalone
  #         --onefile
  #         --macos-create-app-bundle
  #         --output-dir=MCSL2Main
  #         --enable-plugin=pyqt5
  #         --include-data-dir=PyQt5/Qt5=PyQt5/Qt5
  #         --macos-app-version=${{ matrix.mcsl2version }}
  #         MCSL2App.py
          
  #     - name: Fix Nuitka-built App
  #       run: | 
  #         cp MCSL2Main/Info.plist MCSL2Main/MCSL2App.app/Contents/
  #         cp -r MCSL2Main/Resources/ MCSL2Main/MCSL2App.app/Contents/Resources/
  #         cp MCSL2_macOS_DMG_Background.jpeg MCSL2Main/
  #         cp MCSL2.icns MCSL2Main/

  #     - name: Create DMG
  #       run: |
  #         cd MCSL2Main
  #         create-dmg --volname "MCSL2 Installer" --volicon "MCSL2.icns" --background "MCSL2_macOS_DMG_Background.jpeg" --window-pos 200 110 --window-size 576 324 --text-size 12 --icon-size 72 --icon "MCSL2App.app" 200 126 --app-drop-link 346 126 --hide-extension "MCSL2App.app" "MCSL2-${{ matrix.mcsl2version }}-macOS-x64.dmg" "MCSL2App.app"
          
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
  #         path: |
  #           MCSL2Main/*.dmg

  Linux:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
        architecture:
          - x64
          - x86
          - arm64
        mcsl2version: 
          - 2.2.0.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt

      - name: Install Dependencies for Linux
        run: |
          sudo apt-get install -y libfuse2
          sudo apt-get install -y ccache

      - name: Build on Linux
        run: >
          python -m nuitka
          --mingw64
          --enable-plugin=pyqt5
          --assume-yes-for-downloads
          --disable-console
          --include-data-dir=resource/dark=resource/dark
          --include-data-dir=resource/light=resource/light
          --follow-import-to=Adapters
          --follow-import-to=MCSL2Lib
          --lto=no
          --onefile
          --output-dir=build
          --linux-icon=MCSL2.ico
          --company-name="MCSL Team"
          --product-name="MCSL 2"
          --file-version=${{ matrix.mcsl2version }}
          --product-version=${{ matrix.mcsl2version }}
          --file-description="MC Server Launcher 2"
          MCSL2.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.bin

  Release:
    runs-on: ubuntu-latest

    needs:
      - Windows
      # - macOS
      - Linux
    
    strategy:
      matrix:
        mcsl2version: 
          - 2.2.0.0

    steps:

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'Asia/Shanghai'

      - name: Install Tools
        run: sudo apt install p7zip-full -y

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          path: repo
          
      - name: Compress Artifacts
        run: |
          7z a "MCSL2-${{ matrix.mcsl2version }}-Windows-x64.zip" "./MCSL2-Windows-x64/*"
          7z a "MCSL2-${{ matrix.mcsl2version }}-Windows-x86.zip" "./MCSL2-Windows-x86/*"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./repo/ChangeLog.md
          prerelease: false
          draft: false
          tag_name: v${{ matrix.mcsl2version }}
          files: |
            *.zip
            *.bin
            
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
