name: Build and Release

on: [push, workflow_dispatch]

permissions: write-all

jobs:
  BuildWindowsVersion:
    strategy:
      fail-fast: false

      matrix:
        os:
          - windows-latest
        architecture:
          - x64
          - x86
        mcsl2version: 
          - 2.1.3.7

    runs-on: ${{ matrix.os }}

    steps:

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Update Pip
        run: |
          python -m pip install pip setuptools -U


      - name: Install Requirements
        run: |
          python -m pip install -r requirements.txt -r requirements.dev.txt

      - name: Build on Windows
        run: >
          python -m nuitka 
          --mingw64
          --standalone
          --enable-plugin=pyqt5
          --onefile
          --output-dir=build
          --assume-yes-for-downloads
          --windows-disable-console
          --windows-icon-from-ico=MCSL2.ico
          --windows-company-name="LxHTT"
          --windows-product-name="MCSL 2"
          --windows-file-version=${{ matrix.mcsl2version }}
          --windows-product-version=${{ matrix.mcsl2version }}
          --windows-file-description="MC Server Launcher 2"
          MCSL2.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.exe

  BuildmacOSVersion:
    strategy:
      fail-fast: false

      matrix:
        os:
          - macos-latest
        architecture:
          - x64
        mcsl2version: 
          - 2.1.3.7

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Update Pip
        run: |
          python -m pip install pip setuptools -U

      - name: Install Requirements
        run: |
          python -m pip install -r requirements.txt -r requirements.dev.txt

      - name: Delete GITKEEP File
        run: |
          rm PyQt5/Qt5/.gitkeep
        


      - name: Build on macOS
        run: >
          python -m nuitka
          --standalone
          --onefile
          --macos-create-app-bundle
          --disable-console
          --output-dir=build
          --assume-yes-for-download
          --enable-plugin=pyqt5
          --include-data-dir=PyQt5/Qt5=PyQt5/Qt5
          --macos-app-version=${{ matrix.mcsl2version }}
          --macos-app-icon=MCSL2.icns
          MCSL2.py
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.app/**/*

  BuildLinuxVersion:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
        architecture:
          - x64
          - x86
        mcsl2version: 
          - 2.1.3.7

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements.dev.txt

      - name: Update Pip
        run: |
          python -m pip install pip setuptools -U

      - name: Install Deps for Linux
        run: |
          sudo apt-get install -y libfuse2

      - name: Install Project Deps
        run: |
          python -m pip install -r requirements.txt -r requirements.dev.txt

      - name: Build on Linux
        run: >
          python -m nuitka
          --standalone
          --enable-plugin=pyqt5
          --onefile
          --output-dir=build
          --assume-yes-for-downloads
          --linux-icon=MCSL2.ico
          --company-name="LxHTT"
          --product-name="MCSL 2"
          --file-version=${{ matrix.mcsl2version }}
          --product-version=${{ matrix.mcsl2version }}
          --file-description="MC Server Launcher 2"
          MCSL2.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/*.bin

  CreateRelease:
    runs-on: ubuntu-latest

    needs:
      - BuildWindowsVersion
      - BuildmacOSVersion
      - BuildLinuxVersion
    
    strategy:
      matrix:
        mcsl2version: 
          - 2.1.3.7

    steps:

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'Asia/Shanghai'

      - name: Install Tools
        run: sudo apt install p7zip-full -y

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          path: repo
          
      - name: Compress Artifacts
        run: |
          7z a "MCSL2-${{ matrix.mcsl2version }}-Linux-x64.zip" "./MCSL2-Linux-x64/*"
          7z a "MCSL2-${{ matrix.mcsl2version }}-Linux-x86.zip" "./MCSL2-Linux-x86/*"
          7z a "MCSL2-${{ matrix.mcsl2version }}-Windows-x64.zip" "./MCSL2-Windows-x64/*"
          7z a "MCSL2-${{ matrix.mcsl2version }}-Windows-x86.zip" "./MCSL2-Windows-x86/*"
          7z a "MCSL2-${{ matrix.mcsl2version }}-macOS-x64.zip" "./MCSL2-macOS-x64/*"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./repo/ChangeLog.md
          prerelease: true
          draft: false
          tag_name: v${{ matrix.mcsl2version }}
          files: |
            MCSL2-${{ matrix.mcsl2version }}-Linux-x64.zip
            MCSL2-${{ matrix.mcsl2version }}-Linux-x86.zip
            MCSL2-${{ matrix.mcsl2version }}-Windows-x64.zip
            MCSL2-${{ matrix.mcsl2version }}-Windows-x86.zip
            MCSL2-${{ matrix.mcsl2version }}-macOS-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
