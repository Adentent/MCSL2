name: Build and Release

on: workflow_dispatch

permissions: write-all

jobs:
  Windows:
    strategy:
      fail-fast: false

      matrix:
        os:
          - windows-latest
        architecture:
          - x64
          - x86
          - arm64
        mcsl2version: 
          - 2.2.1.1

    runs-on: ${{ matrix.os }}

    steps:

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt
          python -m pip uninstall numpy -y
          python -m pip uninstall scipy -y

      - name: Build on Windows
        run: >
          python -m nuitka
          --standalone
          --clang
          --msvc=latest
          --enable-plugin=pyqt5
          --disable-plugin=multiprocessing
          --nofollow-import-to=scipy
          --nofollow-import-to=numpy
          --output-dir=build
          --assume-yes-for-downloads
          --windows-icon-from-ico=MCSL2.ico
          --disable-console
          --company-name="MCSL Team"
          --product-name="MCSL 2"
          --file-version=${{ matrix.mcsl2version }}
          --product-version=${{ matrix.mcsl2version }}
          --windows-file-description="MC Server Launcher 2"
          --include-data-dir=resource/dark=resource/dark
          --include-data-dir=resource/light=resource/light
          --include-data-dir=MCSL2/Aria2=MCSL2/Aria2
          --follow-import-to=Adapters
          --follow-import-to=MCSL2Lib
          --copyright="Copyright ©MCSL Team. All right reserved."
          --lto=no
          --remove-output
          MCSL2.py

      - name: Delete Useless Files and Compress with upx
        run: |
          cd build
          cd MCSL2.dist
          cmd /K rmdir /s /q certifi
          cmd /K rmdir /s /q zstandard
          cmd /K del /f /q _asyncio.pyd
          cmd /K del /f /q _multiprocessing.pyd
          cmd /K del /f /q _queue.pyd
          cmd /K del /f /q libeay32.dll
          cmd /K del /f /q pyexpat.pyd
          cmd /K del /f /q qt5qml.dll
          cmd /K del /f /q qt5qmlmodels.dll
          cmd /K del /f /q qt5quick.dll
          cmd /K del /f /q ssleay32.dll
          cd ..
          cd ..
          .\upx.exe -9  _ctypes.pyd _decimal.pyd _elementtree.pyd _lzma.pyd _overlapped.pyd _socket.pyd _ssl.pyd _win32sysloader.pyd libffi-7.dll libcrypto-1_1.dll libssl-1_1.dll MCSL2.exe python38.dll pythoncom38.dll pywintypes38.dll qt5core.dll qt5dbus.dll qt5gui.dll qt5multimedia.dll qt5network.dll qt5printsupport.dll qt5svg.dll qt5websockets.dll qt5widgets.dll qt5xml.dll select.pyd unicodedata.pyd win32api.pyd win32gui.pyd win32print.pyd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/MCSL2.dist/**/*

  Linux:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
        architecture:
          - x64
          - x86
          - arm64
        mcsl2version: 
          - 2.2.1.1

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Update Pip and Install Requirements
        run: |
          python -m pip install pip setuptools -U
          python -m pip install -r requirements.txt
          python -m pip uninstall numpy -y
          python -m pip uninstall scipy -y

      - name: Install Dependencies for Linux
        run: |
          sudo apt-get install -y libfuse2
          sudo apt-get install -y ccache
          sudo apt-get install -y upx-ucl

      - name: Build on Linux
        run: >
          python -m nuitka
          --clang
          --msvc=latest
          --standalone
          --enable-plugin=pyqt5
          --disable-plugin=multiprocessing
          --nofollow-import-to=scipy
          --nofollow-import-to=numpy
          --assume-yes-for-downloads
          --disable-console
          --follow-import-to=Adapters
          --follow-import-to=MCSL2Lib
          --lto=no
          --output-dir=build
          --linux-icon=MCSL2.ico
          --company-name="MCSL Team"
          --product-name="MCSL 2"
          --file-version=${{ matrix.mcsl2version }}
          --product-version=${{ matrix.mcsl2version }}
          --file-description="MC Server Launcher 2"
          --include-data-dir=resource/dark=resource/dark
          --include-data-dir=resource/light=resource/light
          --remove-output
          --copyright="Copyright ©MCSL Team. All right reserved."
          MCSL2.py

      - name: Delete Useless Files and Compress with upx
        run: |
          cd build
          cd MCSL2.dist
          rm -r certifi
          rm -r zstandard
          sudo rm libQt5Quick.so.5
          sudo rm libQt5Qml.so.5
          sudo rm libQt5QmlModels.so.5
          sudo rm _asyncio.so
          sudo rm _multiprocessing.so
          sudo rm _queue.so
          upx -9 _bisect.so _blake2.so _bz2.so _codecs_cn.so _codecs_hk.so _codecs_iso2022.so _codecs_jp.so _codecs_kr.so _codecs_tw.so _contextvars.so _crypt.so _csv.so _ctypes.so _datetime.so _dbm.so _decimal.so _elementtree.so _hashlib.so _heapq.so _lzma.so _json.so _md5.so _multibytecodec.so _opcode.so _pickle.so _posixshmem.so _posixsubprocess.so _random.so _sha1.so _sha256.so _sha3.so _sha512.so _socket.so _ssl.so _struct.so array.so audioop.so binascii.so fcntl.so grp.so libicui18n.so.56 libicuuc.so.56 libpython3.8.so.1.0 libQt5DBus.so.5 libQt5Network.so.5 libQt5PrintSupport.so.5 libQt5Svg.so.5 libQt5WaylandClient.so.5 libQt5WebSockets.so.5 libQt5Widgets.so.5 libQt5X11Extras.so.5 libQt5Xml.so.5 math.so MCSL2.bin mmap.so pyexpat.so resource.so select.so termios.so unicodedata.so zlib.so


      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MCSL2-${{ runner.os }}-${{ matrix.architecture }}
          path: |
            build/MCSL2.dist/**/*

  Release:
    runs-on: ubuntu-latest

    needs:
      - Windows
      - Linux
    
    strategy:
      matrix:
        mcsl2version: 
          - 2.2.1.1

    steps:

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'Asia/Shanghai'

      - name: Install Tools
        run: sudo apt install p7zip-full -y

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          path: repo
          
      - name: Compress Artifacts
        run: |
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Windows-x64.zip" "./MCSL2-Windows-x64/*"
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Windows-x86.zip" "./MCSL2-Windows-x86/*"
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Windows-arm64.zip" "./MCSL2-Windows-arm64/*"
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Linux-x64.zip" "./MCSL2-Linux-x64/*"
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Linux-x86.zip" "./MCSL2-Linux-x86/*"
          7z a -tzip "MCSL2-${{ matrix.mcsl2version }}-Linux-arm64.zip" "./MCSL2-Linux-arm64/*"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./repo/ChangeLog.md
          prerelease: false
          draft: false
          tag_name: v${{ matrix.mcsl2version }}
          files: |
            *.zip

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
